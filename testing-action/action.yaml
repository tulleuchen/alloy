name: "Testing Action"
description: "This is a testing compositive action"
inputs:
  BEANSTALK_APP:  # application name
    description: 'BEANSTALK_APP'
    required: true
  BEANSTALK_ENV:  # environment name
    description: 'BEANSTALK_ENV'
    required: true
    default: 'devops'
outputs:
  BEANSTALK_APP: 
    description: "BEANSTALK_APP"
    value: ${{ steps.testing-action-id.outputs.BEANSTALK_APP }}
  BEANSTALK_ENV:
    description: "BEANSTALK_ENV"
    value: ${{ steps.testing-action-id.outputs.BEANSTALK_ENV }}

runs:
  using: "composite"
  steps:
    - name: Caller Inputs to Env Var
      if: github.event_name == 'workflow_dispatch'
      shell: bash
      run: | #!/usr/bin/bash -e
        export SCRIPTS="{PWD:?}/buildscripts"
        find 
        if [[ '${{ toJSON(github.event.inputs) }}' != "null" ]]; then
          GITHUB_INPUTS='${{ toJSON(github.event.inputs) }}'
          EXPORT_CMD_GITHUB_INPUTS="$(python3 "${SCRIPTS:?}/context-to-env.py" "${GITHUB_INPUTS}")"
          eval "${EXPORT_CMD_GITHUB_INPUTS}"
        fi

    - name: Testing Action
      id: testing-action-id
      shell: bash
      run: | #!/usr/bin/bash -e
        # this is for other steps to be able to consume the output. 
        # It doesn't actually print to the log
        echo "::set-output name=BEANSTALK_APP::$(echo ${BEANSTALK_APP})"
        echo "::set-output name=BEANSTALK_ENV::$(echo ${BEANSTALK_ENV})"

        # This actually prints to the log
        echo "echo BEANSTALK_APP=${BEANSTALK_APP}"
        echo "echo BEANSTALK_ENV=${BEANSTALK_ENV}"
